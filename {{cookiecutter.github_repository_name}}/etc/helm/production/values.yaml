deployment:
  command:
  - gunicorn
  - config.wsgi:application
  args:
    config: file:config/gunicorn.py
  replicaCount: 1
  resources:
    requests:
      memory: 300M
      cpu: 50m
    limits:
      memory: 1024Mi
      cpu: 500m
image:
  pullPolicy: IfNotPresent
  repository: {{ cookiecutter.docker_image_production }}
  tag: latest
ingress:
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: 'true'
  enabled: true
  hosts:
  - {{ cookiecutter.app_url_production }}
  tls:
  - hosts:
    - {{ cookiecutter.app_url_production }}
    secretName: {{cookiecutter.app_name}}-tls
management:
  enabled: false
envFromSecret:
  enabled: true
  secretName: {{ cookiecutter.app_name }}
postgres:
  enabled: true
  host: patroni-{{cookiecutter.app_name}}-patroni.{{cookiecutter.app_name}}.svc.cluster.local
  port: "5432"
  secret:
    key: password-admin
    name: patroni-{{cookiecutter.app_name}}-patroni
  user: webapp
service:
  externalPort: 80
  internalPort: 8000
  livenessProbe:
    httpGet:
      path: /healthz
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
  name: nginx
  readinessProbe:
    httpGet:
      path: /readiness
      port: 8000
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
  type: NodePort
rabbitmq:
  enabled: false
redis:
  enabled: false
workers:
  enabled: false